services:
  cassandra:
    image: cassandra:4.1
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=MyCluster
    networks:
      - my_network
    healthcheck:
      test: [ "CMD-SHELL", "cqlsh -e 'describe keyspaces'" ]
      interval: 30s
      timeout: 10s
      retries: 5
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - my_network
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT

      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_JMX_PORT: 9999
      JMX_PORT: 9999
    depends_on:
      - zookeeper
    networks:
      - my_network
  redis:
    image: redis:6.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - my_network
  oms-schema-registry:
    image: confluentinc/cp-schema-registry
    hostname: oms-schema-registry
    container_name: oms-schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    networks:
      - my_network
    environment:
      SCHEMA_REGISTRY_HOST_NAME: oms-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:29092'
  order-api:
    image: 338511574097.dkr.ecr.ap-southeast-2.amazonaws.com/sss/onewallex/order-api:25.0408.1401_main_6e93e95
    container_name: order-api
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_APPLICATION_JSON: '{"debug":true,"logging.level.root":"DEBUG"}'
      SPRING_CASSANDRA_CONTACT_POINTS: cassandra
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_URL: http://oms-schema-registry:8081
    depends_on:
      - cassandra
      - kafka
      - oms-schema-registry
    networks:
      - my_network
    volumes:
      - ./src/main/resources/application-dev.properties:/app/application.properties
      - ./src/main/avro/:/app/avro
    healthcheck:
      test: [ "CMD-SHELL", "cat /app/application.properties'" ]
      interval: 30s
      timeout: 10s
      retries: 5
networks:
  my_network:
    driver: bridge