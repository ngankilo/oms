services:
  cassandra:
    image: cassandra:4.1
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=MyCluster
    networks:
      - my_network
    healthcheck:
      test: [ "CMD-SHELL", "cqlsh -e 'describe keyspaces'" ]
      interval: 30s
      timeout: 10s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - my_network

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_JMX_PORT: 9999
      JMX_PORT: 9999
    depends_on:
      - zookeeper
    networks:
      - my_network

  redis:
    image: redis:6.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - my_network
  order-api:
    build:
      context: .
      dockerfile: Dockerfile
      no_cache: true
    container_name: order-api
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_CONFIG_LOCATION: /app/application.properties
      SPRING_APPLICATION_JSON: '{"debug":true,"logging.level.root":"DEBUG"}'
      CASSANDRA_CONTACT_POINTS: cassandra
      ORDER_EVENT_SCHEMA_PATH: /app/avro/order_event.avsc
    depends_on:
      - cassandra
      - kafka
    networks:
      - my_network
    volumes:
      - ./src/main/resources/application-dev.properties:/app/application.properties
      - ./src/main/avro/:/app/avro
    healthcheck:
      test: [ "CMD-SHELL", "cat /app/application.properties'" ]
      interval: 30s
      timeout: 10s
      retries: 5
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9093
      JVM_OPTS: "-Xms32M -Xmx64M"
    depends_on:
      - kafka
    networks:
      - my_network
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - my_network
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - my_network
    depends_on:
      - prometheus
  kafka-manager:
    image: hlebalbau/kafka-manager:latest
    container_name: kafka-manager
    ports:
      - "9001:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
      KAFKA_HOSTS: kafka:9093
    depends_on:
      - kafka
    networks:
      - my_network
networks:
  my_network:
    driver: bridge
